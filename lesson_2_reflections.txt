What happens when you initialize a repository?
Why do you need to do it?

to create a git repository so that it starts
tracking the changes that are made to the 
files & diretories.
----

How is the staging area different from the 
working directory and the repository?
What value do you think it offers?

it is a temporary location for whatever
commits one is wanting to make in a go.
It helps add several files, directories
and then commit. Need to word it better!
----

How can you use the staging area to make sure
you have one commit per logical change?

perhaps by adding only one change at a time!
----

What are some situations when branches would 
be helpful in keeping your history organized?
How would branches help?

branches allow you to branch out without
affecting the code - specially useful when
you want to experiment with something while
keeping the main code unaffected or rather
want to add features to master and also 
experiment with a branch!

'git branch' shows the available branches
'git branch <new branchName> would create a
new branch.
'git checkout branchName' would move to the
mentioned branchName
----

How do the diagrams help you visualize the
branch structure?

shows the branches and how they progressed
wrt to the other branches in the system.
Plus you can also checkout a particular
commit(you come in detached HEAD state) and
if you want, you can create a new branch of
that commit by using
 
git checkout -b new_branch_name
(equivalent to 2 commands
1. git branch new_branch_name
2. git checkout new_branch_name)

this will create a new branch at your current
commit.
eg.
brijeshtripathi (master) asteroids $ git log --graph --oneline master coins easy-mode
* 29d482b Make the asteroid break into 2 pieces instead of 3
* 3884eab Add color
* 3e42136 now using requestAnimationFrame
* 4035769 frame interval was set wrong after game was paused
* 25ede83 a couple missing ends with the ipad version
* df03538 I can't spell 'screen' apparently :)
| * 354dfdd Make ships able to spawn on coins
| * 0c6daf1 Make it possible to collect coins
| * a3c0ae4 Create helper functions
| * 656b02e First pass at adding coins
|/  
* b0678b1 Revert controls
* f19cb1b Fix typo in space
* 75928a9 Use space for movement and enter for shooting

the above thing shows the git log in a graph mode
and one line per commit for the three branches
master, coins & easy-mode
new branch(coins) was created after 
b0676b1('revert controls)
and coins branch then had 656, a3c...354 as 
the subsequent commits in its branch. Master
had b067('revert controls) and then df0(spell 'screen')

pretty helpful to visualise, no?
----

What is the result of merging two branches together?
Why do we represent it in the diagram the way we do?

merging combines two branches, adding 'features' that
were once being experimented on a particular branch - 
in our case 'coins'branch.
Why represent in diagrams? well that gives a very 
good visualisation!
----

